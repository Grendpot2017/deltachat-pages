#!/usr/bin/env python3


# the structure of the help files is:
# - ANY_DIR/help/LANG/help.html  (files generated by deltachat-pages)
# - ANY_DIR/help/help.css  (file is should be provided by deltachat-UI, not generated by deltachat-pages)


from pathlib import Path
from shutil import copyfile
import os
import re


# list all files that should go to the local help here.
# the path should be the path used eg. in the <img> tag.
linked_files = ["../assets/home/delta-what-optim.png"]


def read_file(filename):
    f = open(filename, 'r')
    content = f.read()
    f.close()
    return content


def write_file(filename, content):
    f = open(filename, 'w')
    f.write(content)
    f.close()


def generate_file(destdir, lang, file, add_top_links):
    print("generate local help in " + destdir + "/" + lang + "/" + file)

    content = read_file("../_site/" + lang + "/" + file)

    content = re.sub(r"^.*<div id=\"content\">.*<h1>.*?</h1>.*?<ul.*?>",
                       "<!DOCTYPE html>\n"
                     + "<html>"
                     +   "<head>"
                     +     "<meta charset=\"UTF-8\" />"
                     +     "<link rel=\"stylesheet\" href=\"../help.css\" />"
                     +   "</head>"
                     +   "<body>"
                     +     "<ul id=\"top\">",
                     content,
                     flags=re.MULTILINE|re.DOTALL)

    content = re.sub(r"</div>.*?</body>.*</html>.*$",
                         "</body>"
                     + "</html>",
                     content,
                     flags=re.MULTILINE|re.DOTALL)

    for linked_file in linked_files:
        local_file = "../" + linked_file.split("/")[-1]
        content = re.sub(linked_file, local_file, content)

    if add_top_links:
        top_link = "<p class=\"back\"><a href=\"#top\">^</a></p>"
        content = re.sub(r"<h([234].*?)>",
                          top_link + "<h\\1>",
                         content,
                         flags=re.MULTILINE|re.DOTALL) + top_link

    write_file(destdir + "/" + lang + "/" + file, content)


def generate_lang(destdir, lang, add_top_links):
    os.makedirs(destdir + "/" + lang, exist_ok=True)
    generate_file(destdir, lang, "help.html", add_top_links)


def generate_help(destdir, add_top_links=False):
    generate_lang(destdir, "de", add_top_links)
    generate_lang(destdir, "en", add_top_links)
    generate_lang(destdir, "es", add_top_links)
    generate_lang(destdir, "it", add_top_links)
    generate_lang(destdir, "nl", add_top_links)
    generate_lang(destdir, "sq", add_top_links)
    for linked_file in linked_files:
        local_file = destdir + "/" + linked_file.split("/")[-1]
        copyfile(linked_file, local_file)


if __name__ == "__main__":

    # if we're not inside the tools directory, go in
    if Path('tools').exists():
        os.chdir('tools')

    generate_help("../../deltachat-android/assets/help")
    generate_help("../../deltachat-ios/deltachat-ios/Assets/help", add_top_links=True)
